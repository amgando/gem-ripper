[1, ident],
 [[1, 7], :on_sp, " "],
 [[1, 8], :on_tstring_beg, "'"],
 [[1, 9], :on_tstring_content, "sinatra/base"],
 [[1, 21], :on_tstring_end, "'"],
 [[1, 22], :on_nl, "\n"],
 [[2, 0], :on_ignored_nl, "\n"],
 [[3, 0], :on_kw, "module"],
 [[3, 6], :on_sp, " "],
 [[3, 7], :on_const, "Sinatra"],
 [[3, 14], :on_nl, "\n"],
 [[4, 0], :on_sp, "  "],
 [[4, 2], :on_kw, "class"],
 [[4, 7], :on_sp, " "],
 [[4, 8], :on_const, "Application"],
 [[4, 19], :on_sp, " "],
 [[4, 20], :on_op, "<"],
 [[4, 21], :on_sp, " "],
 [[4, 22], :on_const, "Base"],
 [[4, 26], :on_nl, "\n"],
 [[5, 0], :on_kw, "class"],
 [[5, 5], :on_sp, " "],
 [[5, 6], :on_const, "Application"],
 [[5, 17], :on_sp, " "],
 [[5, 18], :on_op, "<"],
 [[5, 19], :on_sp, " "],
 [[5, 20], :on_const, "Base"],
 [[5, 24], :on_nl, "\n"],
 [[6, 0], :on_kw, "class"],
 [[6, 5], :on_sp, " "],
 [[6, 6], :on_const, "Application"],
 [[6, 17], :on_op, "<"],
 [[6, 18], :on_const, "Base"],
 [[6, 22], :on_nl, "\n"],
 [[7, 0], :on_kw, "class"],
 [[7, 5], :on_sp, " "],
 [[7, 6], :on_const, "MyClass"],
 [[7, 13], :on_sp, " "],
 [[7, 14], :on_op, "<"],
 [[7, 15], :on_sp, " "],
 [[7, 16], :on_const, "AnotherClass"],
 [[7, 28], :on_nl, "\n"],
 [[8, 0], :on_ignored_nl, "\n"],
 [[9, 0], :on_sp, "    "],
 [[9, 4],
  :on_comment,
  "# we assume that the first file that requires 'sinatra' is the\n"],
 [[10, 0], :on_sp, "    "],
 [[10, 4],
  :on_comment,
  "# app_file. all other path related options are calculated based\n"],
 [[11, 0], :on_sp, "    "],
 [[11, 4], :on_comment, "# on this path by default.\n"],
 [[12, 0], :on_sp, "    "],
 [[12, 4], :on_ident, "set"],
 [[12, 7], :on_sp, " "],
 [[12, 8], :on_symbeg, ":"],
 [[12, 9], :on_ident, "app_file"],
 [[12, 17], :on_comma, ","],
 [[12, 18], :on_sp, " "],
 [[12, 19], :on_ident, "caller_files"],
 [[12, 31], :on_period, "."],
 [[12, 32], :on_ident, "first"],
 [[12, 37], :on_sp, " "],
 [[12, 38], :on_op, "||"],
 [[12, 40], :on_sp, " "],
 [[12, 41], :on_gvar, "$0"],
 [[12, 43], :on_nl, "\n"],
 [[13, 0], :on_ignored_nl, "\n"],
 [[14, 0], :on_sp, "    "],
 [[14, 4], :on_ident, "set"],
 [[14, 7], :on_sp, " "],
 [[14, 8], :on_symbeg, ":"],
 [[14, 9], :on_ident, "run"],
 [[14, 12], :on_comma, ","],
 [[14, 13], :on_sp, " "],
 [[14, 14], :on_const, "Proc"],
 [[14, 18], :on_period, "."],
 [[14, 19], :on_ident, "new"],
 [[14, 22], :on_sp, " "],
 [[14, 23], :on_lbrace, "{"],
 [[14, 24], :on_sp, " "],
 [[14, 25], :on_const, "File"],
 [[14, 29], :on_period, "."],
 [[14, 30], :on_ident, "expand_path"],
 [[14, 41], :on_lparen, "("],
 [[14, 42], :on_gvar, "$0"],
 [[14, 44], :on_rparen, ")"],
 [[14, 45], :on_sp, " "],
 [[14, 46], :on_op, "=="],
 [[14, 48], :on_sp, " "],
 [[14, 49], :on_const, "File"],
 [[14, 53], :on_period, "."],
 [[14, 54], :on_ident, "expand_path"],
 [[14, 65], :on_lparen, "("],
 [[14, 66], :on_ident, "app_file"],
 [[14, 74], :on_rparen, ")"],
 [[14, 75], :on_sp, " "],
 [[14, 76], :on_rbrace, "}"],
 [[14, 77], :on_nl, "\n"],
 [[15, 0], :on_ignored_nl, "\n"],
 [[16, 0], :on_sp, "    "],
 [[16, 4], :on_kw, "if"],
 [[16, 6], :on_sp, " "],
 [[16, 7], :on_ident, "run?"],
 [[16, 11], :on_sp, " "],
 [[16, 12], :on_op, "&&"],
 [[16, 14], :on_sp, " "],
 [[16, 15], :on_const, "ARGV"],
 [[16, 19], :on_period, "."],
 [[16, 20], :on_ident, "any?"],
 [[16, 24], :on_nl, "\n"],
 [[17, 0], :on_sp, "      "],
 [[17, 6], :on_ident, "require"],
 [[17, 13], :on_sp, " "],
 [[17, 14], :on_tstring_beg, "'"],
 [[17, 15], :on_tstring_content, "optparse"],
 [[17, 23], :on_tstring_end, "'"],
 [[17, 24], :on_nl, "\n"],
 [[18, 0], :on_sp, "      "],
 [[18, 6], :on_const, "OptionParser"],
 [[18, 18], :on_period, "."],
 [[18, 19], :on_ident, "new"],
 [[18, 22], :on_sp, " "],
 [[18, 23], :on_lbrace, "{"],
 [[18, 24], :on_sp, " "],
 [[18, 25], :on_op, "|"],
 [[18, 26], :on_ident, "op"],
 [[18, 28], :on_op, "|"],
 [[18, 29], :on_ignored_nl, "\n"],
 [[19, 0], :on_sp, "        "],
 [[19, 8], :on_ident, "op"],
 [[19, 10], :on_period, "."],
 [[19, 11], :on_ident, "on"],
 [[19, 13], :on_lparen, "("],
 [[19, 14], :on_tstring_beg, "'"],
 [[19, 15], :on_tstring_content, "-p port"],
 [[19, 22], :on_tstring_end, "'"],
 [[19, 23], :on_comma, ","],
 [[19, 24], :on_sp, "   "],
 [[19, 27], :on_tstring_beg, "'"],
 [[19, 28], :on_tstring_content, "set the port (default is 4567)"],
 [[19, 58], :on_tstring_end, "'"],
 [[19, 59], :on_rparen, ")"],
 [[19, 60], :on_sp, "                "],
 [[19, 76], :on_lbrace, "{"],
 [[19, 77], :on_sp, " "],
 [[19, 78], :on_op, "|"],
 [[19, 79], :on_ident, "val"],
 [[19, 82], :on_op, "|"],
 [[19, 83], :on_sp, " "],
 [[19, 84], :on_ident, "set"],
 [[19, 87], :on_sp, " "],
 [[19, 88], :on_symbeg, ":"],
 [[19, 89], :on_ident, "port"],
 [[19, 93], :on_comma, ","],
 [[19, 94], :on_sp, " "],
 [[19, 95], :on_const, "Integer"],
 [[19, 102], :on_lparen, "("],
 [[19, 103], :on_ident, "val"],
 [[19, 106], :on_rparen, ")"],
 [[19, 107], :on_sp, " "],
 [[19, 108], :on_rbrace, "}"],
 [[19, 109], :on_nl, "\n"],
 [[20, 0], :on_sp, "        "],
 [[20, 8], :on_ident, "op"],
 [[20, 10], :on_period, "."],
 [[20, 11], :on_ident, "on"],
 [[20, 13], :on_lparen, "("],
 [[20, 14], :on_tstring_beg, "'"],
 [[20, 15], :on_tstring_content, "-o addr"],
 [[20, 22], :on_tstring_end, "'"],
 [[20, 23], :on_comma, ","],
 [[20, 24], :on_sp, "   "],
 [[20, 27], :on_tstring_beg, "\""],
 [[20, 28], :on_tstring_content, "set the host (default is "],
 [[20, 53], :on_embexpr_beg, "\#{"],
 [[20, 55], :on_ident, "bind"],
 [[20, 59], :on_embexpr_end, "}"],
 [[20, 60], :on_tstring_content, ")"],
 [[20, 61], :on_tstring_end, "\""],
 [[20, 62], :on_rparen, ")"],
 [[20, 63], :on_sp, "             "],
 [[20, 76], :on_lbrace, "{"],
 [[20, 77], :on_sp, " "],
 [[20, 78], :on_op, "|"],
 [[20, 79], :on_ident, "val"],
 [[20, 82], :on_op, "|"],
 [[20, 83], :on_sp, " "],
 [[20, 84], :on_ident, "set"],
 [[20, 87], :on_sp, " "],
 [[20, 88], :on_symbeg, ":"],
 [[20, 89], :on_ident, "bind"],
 [[20, 93], :on_comma, ","],
 [[20, 94], :on_sp, " "],
 [[20, 95], :on_ident, "val"],
 [[20, 98], :on_sp, " "],
 [[20, 99], :on_rbrace, "}"],
 [[20, 100], :on_nl, "\n"],
 [[21, 0], :on_sp, "        "],
 [[21, 8], :on_ident, "op"],
 [[21, 10], :on_period, "."],
 [[21, 11], :on_ident, "on"],
 [[21, 13], :on_lparen, "("],
 [[21, 14], :on_tstring_beg, "'"],
 [[21, 15], :on_tstring_content, "-e env"],
 [[21, 21], :on_tstring_end, "'"],
 [[21, 22], :on_comma, ","],
 [[21, 23], :on_sp, "    "],
 [[21, 27], :on_tstring_beg, "'"],
 [[21, 28],
  :on_tstring_content,
  "set the environment (default is development)"],
 [[21, 72], :on_tstring_end, "'"],
 [[21, 73], :on_rparen, ")"],
 [[21, 74], :on_sp, "  "],
 [[21, 76], :on_lbrace, "{"],
 [[21, 77], :on_sp, " "],
 [[21, 78], :on_op, "|"],
 [[21, 79], :on_ident, "val"],
 [[21, 82], :on_op, "|"],
 [[21, 83], :on_sp, " "],
 [[21, 84], :on_ident, "set"],
 [[21, 87], :on_sp, " "],
 [[21, 88], :on_symbeg, ":"],
 [[21, 89], :on_ident, "environment"],
 [[21, 100], :on_comma, ","],
 [[21, 101], :on_sp, " "],
 [[21, 102], :on_ident, "val"],
 [[21, 105], :on_period, "."],
 [[21, 106], :on_ident, "to_sym"],
 [[21, 112], :on_sp, " "],
 [[21, 113], :on_rbrace, "}"],
 [[21, 114], :on_nl, "\n"],
 [[22, 0], :on_sp, "        "],
 [[22, 8], :on_ident, "op"],
 [[22, 10], :on_period, "."],
 [[22, 11], :on_ident, "on"],
 [[22, 13], :on_lparen, "("],
 [[22, 14], :on_tstring_beg, "'"],
 [[22, 15], :on_tstring_content, "-s server"],
 [[22, 24], :on_tstring_end, "'"],
 [[22, 25], :on_comma, ","],
 [[22, 26], :on_sp, " "],
 [[22, 27], :on_tstring_beg, "'"],
 [[22, 28],
  :on_tstring_content,
  "specify rack server/handler (default is thin)"],
 [[22, 73], :on_tstring_end, "'"],
 [[22, 74], :on_rparen, ")"],
 [[22, 75], :on_sp, " "],
 [[22, 76], :on_lbrace, "{"],
 [[22, 77], :on_sp, " "],
 [[22, 78], :on_op, "|"],
 [[22, 79], :on_ident, "val"],
 [[22, 82], :on_op, "|"],
 [[22, 83], :on_sp, " "],
 [[22, 84], :on_ident, "set"],
 [[22, 87], :on_sp, " "],
 [[22, 88], :on_symbeg, ":"],
 [[22, 89], :on_ident, "server"],
 [[22, 95], :on_comma, ","],
 [[22, 96], :on_sp, " "],
 [[22, 97], :on_ident, "val"],
 [[22, 100], :on_sp, " "],
 [[22, 101], :on_rbrace, "}"],
 [[22, 102], :on_nl, "\n"],
 [[23, 0], :on_sp, "        "],
 [[23, 8], :on_ident, "op"],
 [[23, 10], :on_period, "."],
 [[23, 11], :on_ident, "on"],
 [[23, 13], :on_lparen, "("],
 [[23, 14], :on_tstring_beg, "'"],
 [[23, 15], :on_tstring_content, "-x"],
 [[23, 17], :on_tstring_end, "'"],
 [[23, 18], :on_comma, ","],
 [[23, 19], :on_sp, "        "],
 [[23, 27], :on_tstring_beg, "'"],
 [[23, 28], :on_tstring_content, "turn on the mutex lock (default is off)"],
 [[23, 67], :on_tstring_end, "'"],
 [[23, 68], :on_rparen, ")"],
 [[23, 69], :on_sp, "       "],
 [[23, 76], :on_lbrace, "{"],
 [[23, 77], :on_sp, "       "],
 [[23, 84], :on_ident, "set"],
 [[23, 87], :on_sp, " "],
 [[23, 88], :on_symbeg, ":"],
 [[23, 89], :on_ident, "lock"],
 [[23, 93], :on_comma, ","],
 [[23, 94], :on_sp, " "],
 [[23, 95], :on_kw, "true"],
 [[23, 99], :on_sp, " "],
 [[23, 100], :on_rbrace, "}"],
 [[23, 101], :on_nl, "\n"],
 [[24, 0], :on_sp, "      "],
 [[24, 6], :on_rbrace, "}"],
 [[24, 7], :on_period, "."],
 [[24, 8], :on_ident, "parse!"],
 [[24, 14], :on_lparen, "("],
 [[24, 15], :on_const, "ARGV"],
 [[24, 19], :on_period, "."],
 [[24, 20], :on_ident, "dup"],
 [[24, 23], :on_rparen, ")"],
 [[24, 24], :on_nl, "\n"],
 [[25, 0], :on_sp, "    "],
 [[25, 4], :on_kw, "end"],
 [[25, 7], :on_nl, "\n"],
 [[26, 0], :on_sp, "  "],
 [[26, 2], :on_kw, "end"],
 [[26, 5], :on_nl, "\n"],
 [[27, 0], :on_ignored_nl, "\n"],
 [[28, 0], :on_sp, "  "],
 [[28, 2], :on_ident, "at_exit"],
 [[28, 9], :on_sp, " "],
 [[28, 10], :on_lbrace, "{"],
 [[28, 11], :on_sp, " "],
 [[28, 12], :on_const, "Application"],
 [[28, 23], :on_period, "."],
 [[28, 24], :on_ident, "run!"],
 [[28, 28], :on_sp, " "],
 [[28, 29], :on_kw, "if"],
 [[28, 31], :on_sp, " "],
 [[28, 32], :on_gvar, "$!"],
 [[28, 34], :on_period, "."],
 [[28, 35], :on_ident, "nil?"],
 [[28, 39], :on_sp, " "],
 [[28, 40], :on_op, "&&"],
 [[28, 42], :on_sp, " "],
 [[28, 43], :on_const, "Application"],
 [[28, 54], :on_period, "."],
 [[28, 55], :on_ident, "run?"],
 [[28, 59], :on_sp, " "],
 [[28, 60], :on_rbrace, "}"],
 [[28, 61], :on_nl, "\n"],
 [[29, 0], :on_kw, "end"],
 [[29, 3], :on_nl, "\n"],
 [[30, 0], :on_ignored_nl, "\n"],
 [[31, 0], :on_ignored_nl, "\n"],
 [[32, 0], :on_comment, "# include would include the module in Object\n"],
 [[33, 0], :on_comment, "# extend only extends the `main` object\n"],
 [[34, 0], :on_ident, "extend"],
 [[34, 6], :on_sp, " "],
 [[34, 7], :on_const, "Sinatra"],
 [[34, 14], :on_op, "::"],
 [[34, 16], :on_const, "Delegator"],
 [[34, 25], :on_nl, "\n"],
 [[35, 0], :on_ignored_nl, "\n"],
 [[36, 0], :on_kw, "class"],
 [[36, 5], :on_sp, " "],
 [[36, 6], :on_const, "Rack"],
 [[36, 10], :on_op, "::"],
 [[36, 12], :on_const, "Builder"],
 [[36, 19], :on_nl, "\n"],
 [[37, 0], :on_sp, "  "],
 [[37, 2], :on_ident, "include"],
 [[37, 9], :on_sp, " "],
 [[37, 10], :on_const, "Sinatra"],
 [[37, 17], :on_op, "::"],
 [[37, 19], :on_const, "Delegator"],
 [[37, 28], :on_nl, "\n"],
 [[38, 0], :on_kw, "end"],
 [[38, 3], :on_nl, "\n"]]
