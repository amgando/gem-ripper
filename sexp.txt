[:program,
 [[:command,
   [:@ident, "require", [1, 0]],
   [:args_add_block,
    [[:string_literal,
      [:string_content, [:@tstring_content, "sinatra/base", [1, 9]]]]],
    false]],
  [:module,
   [:const_ref, [:@const, "Sinatra", [3, 7]]],
   [:bodystmt,
    [[:void_stmt],
     [:class,
      [:const_ref, [:@const, "Application", [4, 8]]],
      [:var_ref, [:@const, "Base", [4, 22]]],
      [:bodystmt,
       [[:command,
         [:@ident, "set", [9, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "app_file", [9, 9]]]],
           [:binary,
            [:call,
             [:vcall, [:@ident, "caller_files", [9, 19]]],
             :".",
             [:@ident, "first", [9, 32]]],
            :"||",
            [:var_ref, [:@gvar, "$0", [9, 41]]]]],
          false]],
        [:command,
         [:@ident, "set", [11, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "run", [11, 9]]]],
           [:method_add_block,
            [:call,
             [:var_ref, [:@const, "Proc", [11, 14]]],
             :".",
             [:@ident, "new", [11, 19]]],
            [:brace_block,
             nil,
             [[:binary,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 25]]],
                 :".",
                 [:@ident, "expand_path", [11, 30]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:var_ref, [:@gvar, "$0", [11, 42]]]],
                  false]]],
               :==,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 49]]],
                 :".",
                 [:@ident, "expand_path", [11, 54]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:vcall, [:@ident, "app_file", [11, 66]]]],
                  false]]]]]]]],
          false]],
        [:if,
         [:binary,
          [:method_add_arg, [:fcall, [:@ident, "run?", [13, 7]]], []],
          :"&&",
          [:call,
           [:var_ref, [:@const, "ARGV", [13, 15]]],
           :".",
           [:@ident, "any?", [13, 20]]]],
         [[:command,
           [:@ident, "require", [14, 6]],
           [:args_add_block,
            [[:string_literal,
              [:string_content, [:@tstring_content, "optparse", [14, 15]]]]],
            false]],
          [:method_add_arg,
           [:call,
            [:method_add_block,
             [:call,
              [:var_ref, [:@const, "OptionParser", [15, 6]]],
              :".",
              [:@ident, "new", [15, 19]]],
             [:brace_block,
              [:block_var,
               [:params,
                [[:@ident, "op", [15, 26]]],
                nil,
                nil,
                nil,
                nil,
                nil,
                nil],
               false],
              [[:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [16, 8]]],
                  :".",
                  [:@ident, "on", [16, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-p port", [16, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the port (default is 4567)",
                       [16, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [16, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [16, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "port", [16, 89]]]],
                     [:method_add_arg,
                      [:fcall, [:@const, "Integer", [16, 95]]],
                      [:arg_paren,
                       [:args_add_block,
                        [[:var_ref, [:@ident, "val", [16, 103]]]],
                        false]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [17, 8]]],
                  :".",
                  [:@ident, "on", [17, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-o addr", [17, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the host (default is ",
                       [17, 28]],
                      [:string_embexpr,
                       [[:vcall, [:@ident, "bind", [17, 55]]]]],
                      [:@tstring_content, ")", [17, 60]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [17, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [17, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "bind", [17, 89]]]],
                     [:var_ref, [:@ident, "val", [17, 95]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [18, 8]]],
                  :".",
                  [:@ident, "on", [18, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-e env", [18, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the environment (default is development)",
                       [18, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [18, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [18, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "environment", [18, 89]]]],
                     [:call,
                      [:var_ref, [:@ident, "val", [18, 102]]],
                      :".",
                      [:@ident, "to_sym", [18, 106]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [19, 8]]],
                  :".",
                  [:@ident, "on", [19, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-s server", [19, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "specify rack server/handler (default is thin)",
                       [19, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [19, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [19, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "server", [19, 89]]]],
                     [:var_ref, [:@ident, "val", [19, 97]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [20, 8]]],
                  :".",
                  [:@ident, "on", [20, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content, [:@tstring_content, "-x", [20, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "turn on the mutex lock (default is off)",
                       [20, 28]]]]],
                   false]]],
                [:brace_block,
                 nil,
                 [[:command,
                   [:@ident, "set", [20, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "lock", [20, 89]]]],
                     [:var_ref, [:@kw, "true", [20, 95]]]],
                    false]]]]]]]],
            :".",
            [:@ident, "parse!", [21, 8]]],
           [:arg_paren,
            [:args_add_block,
             [[:call,
               [:var_ref, [:@const, "ARGV", [21, 15]]],
               :".",
               [:@ident, "dup", [21, 20]]]],
             false]]]],
         nil]],
       nil,
       nil,
       nil]],
     [:method_add_block,
      [:method_add_arg, [:fcall, [:@ident, "at_exit", [25, 2]]], []],
      [:brace_block,
       nil,
       [[:if_mod,
         [:binary,
          [:call,
           [:var_ref, [:@gvar, "$!", [25, 32]]],
           :".",
           [:@ident, "nil?", [25, 35]]],
          :"&&",
          [:call,
           [:var_ref, [:@const, "Application", [25, 43]]],
           :".",
           [:@ident, "run?", [25, 55]]]],
         [:call,
          [:var_ref, [:@const, "Application", [25, 12]]],
          :".",
          [:@ident, "run!", [25, 24]]]]]]]],
    nil,
    nil,
    nil]],
  [:command,
   [:@ident, "extend", [31, 0]],
   [:args_add_block,
    [[:const_path_ref,
      [:var_ref, [:@const, "Sinatra", [31, 7]]],
      [:@const, "Delegator", [31, 16]]]],
    false]],
  [:class,
   [:const_path_ref,
    [:var_ref, [:@const, "Rack", [33, 6]]],
    [:@const, "Builder", [33, 12]]],
   nil,
   [:bodystmt,
    [[:command,
      [:@ident, "include", [34, 2]],
      [:args_add_block,
       [[:const_path_ref,
         [:var_ref, [:@const, "Sinatra", [34, 10]]],
         [:@const, "Delegator", [34, 19]]]],
       false]]],
    nil,
    nil,
    nil]]]]
[:program,
 [[:command,
   [:@ident, "require", [1, 0]],
   [:args_add_block,
    [[:string_literal,
      [:string_content, [:@tstring_content, "sinatra/base", [1, 9]]]]],
    false]],
  [:module,
   [:const_ref, [:@const, "Sinatra", [3, 7]]],
   [:bodystmt,
    [[:void_stmt],
     [:class,
      [:const_ref, [:@const, "Application", [4, 8]]],
      [:var_ref, [:@const, "Base", [4, 22]]],
      [:bodystmt,
       [[:command,
         [:@ident, "set", [9, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "app_file", [9, 9]]]],
           [:binary,
            [:call,
             [:vcall, [:@ident, "caller_files", [9, 19]]],
             :".",
             [:@ident, "first", [9, 32]]],
            :"||",
            [:var_ref, [:@gvar, "$0", [9, 41]]]]],
          false]],
        [:command,
         [:@ident, "set", [11, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "run", [11, 9]]]],
           [:method_add_block,
            [:call,
             [:var_ref, [:@const, "Proc", [11, 14]]],
             :".",
             [:@ident, "new", [11, 19]]],
            [:brace_block,
             nil,
             [[:binary,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 25]]],
                 :".",
                 [:@ident, "expand_path", [11, 30]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:var_ref, [:@gvar, "$0", [11, 42]]]],
                  false]]],
               :==,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 49]]],
                 :".",
                 [:@ident, "expand_path", [11, 54]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:vcall, [:@ident, "app_file", [11, 66]]]],
                  false]]]]]]]],
          false]],
        [:if,
         [:binary,
          [:method_add_arg, [:fcall, [:@ident, "run?", [13, 7]]], []],
          :"&&",
          [:call,
           [:var_ref, [:@const, "ARGV", [13, 15]]],
           :".",
           [:@ident, "any?", [13, 20]]]],
         [[:command,
           [:@ident, "require", [14, 6]],
           [:args_add_block,
            [[:string_literal,
              [:string_content, [:@tstring_content, "optparse", [14, 15]]]]],
            false]],
          [:method_add_arg,
           [:call,
            [:method_add_block,
             [:call,
              [:var_ref, [:@const, "OptionParser", [15, 6]]],
              :".",
              [:@ident, "new", [15, 19]]],
             [:brace_block,
              [:block_var,
               [:params,
                [[:@ident, "op", [15, 26]]],
                nil,
                nil,
                nil,
                nil,
                nil,
                nil],
               false],
              [[:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [16, 8]]],
                  :".",
                  [:@ident, "on", [16, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-p port", [16, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the port (default is 4567)",
                       [16, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [16, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [16, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "port", [16, 89]]]],
                     [:method_add_arg,
                      [:fcall, [:@const, "Integer", [16, 95]]],
                      [:arg_paren,
                       [:args_add_block,
                        [[:var_ref, [:@ident, "val", [16, 103]]]],
                        false]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [17, 8]]],
                  :".",
                  [:@ident, "on", [17, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-o addr", [17, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the host (default is ",
                       [17, 28]],
                      [:string_embexpr,
                       [[:vcall, [:@ident, "bind", [17, 55]]]]],
                      [:@tstring_content, ")", [17, 60]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [17, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [17, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "bind", [17, 89]]]],
                     [:var_ref, [:@ident, "val", [17, 95]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [18, 8]]],
                  :".",
                  [:@ident, "on", [18, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-e env", [18, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the environment (default is development)",
                       [18, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [18, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [18, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "environment", [18, 89]]]],
                     [:call,
                      [:var_ref, [:@ident, "val", [18, 102]]],
                      :".",
                      [:@ident, "to_sym", [18, 106]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [19, 8]]],
                  :".",
                  [:@ident, "on", [19, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-s server", [19, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "specify rack server/handler (default is thin)",
                       [19, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [19, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [19, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "server", [19, 89]]]],
                     [:var_ref, [:@ident, "val", [19, 97]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [20, 8]]],
                  :".",
                  [:@ident, "on", [20, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content, [:@tstring_content, "-x", [20, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "turn on the mutex lock (default is off)",
                       [20, 28]]]]],
                   false]]],
                [:brace_block,
                 nil,
                 [[:command,
                   [:@ident, "set", [20, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "lock", [20, 89]]]],
                     [:var_ref, [:@kw, "true", [20, 95]]]],
                    false]]]]]]]],
            :".",
            [:@ident, "parse!", [21, 8]]],
           [:arg_paren,
            [:args_add_block,
             [[:call,
               [:var_ref, [:@const, "ARGV", [21, 15]]],
               :".",
               [:@ident, "dup", [21, 20]]]],
             false]]]],
         nil]],
       nil,
       nil,
       nil]],
     [:method_add_block,
      [:method_add_arg, [:fcall, [:@ident, "at_exit", [25, 2]]], []],
      [:brace_block,
       nil,
       [[:if_mod,
         [:binary,
          [:call,
           [:var_ref, [:@gvar, "$!", [25, 32]]],
           :".",
           [:@ident, "nil?", [25, 35]]],
          :"&&",
          [:call,
           [:var_ref, [:@const, "Application", [25, 43]]],
           :".",
           [:@ident, "run?", [25, 55]]]],
         [:call,
          [:var_ref, [:@const, "Application", [25, 12]]],
          :".",
          [:@ident, "run!", [25, 24]]]]]]]],
    nil,
    nil,
    nil]],
  [:command,
   [:@ident, "extend", [31, 0]],
   [:args_add_block,
    [[:const_path_ref,
      [:var_ref, [:@const, "Sinatra", [31, 7]]],
      [:@const, "Delegator", [31, 16]]]],
    false]],
  [:class,
   [:const_path_ref,
    [:var_ref, [:@const, "Rack", [33, 6]]],
    [:@const, "Builder", [33, 12]]],
   nil,
   [:bodystmt,
    [[:command,
      [:@ident, "include", [34, 2]],
      [:args_add_block,
       [[:const_path_ref,
         [:var_ref, [:@const, "Sinatra", [34, 10]]],
         [:@const, "Delegator", [34, 19]]]],
       false]]],
    nil,
    nil,
    nil]]]]
[:program,
 [[:command,
   [:@ident, "require", [1, 0]],
   [:args_add_block,
    [[:string_literal,
      [:string_content, [:@tstring_content, "sinatra/base", [1, 9]]]]],
    false]],
  [:module,
   [:const_ref, [:@const, "Sinatra", [3, 7]]],
   [:bodystmt,
    [[:void_stmt],
     [:class,
      [:const_ref, [:@const, "Application", [4, 8]]],
      [:var_ref, [:@const, "Base", [4, 22]]],
      [:bodystmt,
       [[:command,
         [:@ident, "set", [9, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "app_file", [9, 9]]]],
           [:binary,
            [:call,
             [:vcall, [:@ident, "caller_files", [9, 19]]],
             :".",
             [:@ident, "first", [9, 32]]],
            :"||",
            [:var_ref, [:@gvar, "$0", [9, 41]]]]],
          false]],
        [:command,
         [:@ident, "set", [11, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "run", [11, 9]]]],
           [:method_add_block,
            [:call,
             [:var_ref, [:@const, "Proc", [11, 14]]],
             :".",
             [:@ident, "new", [11, 19]]],
            [:brace_block,
             nil,
             [[:binary,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 25]]],
                 :".",
                 [:@ident, "expand_path", [11, 30]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:var_ref, [:@gvar, "$0", [11, 42]]]],
                  false]]],
               :==,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 49]]],
                 :".",
                 [:@ident, "expand_path", [11, 54]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:vcall, [:@ident, "app_file", [11, 66]]]],
                  false]]]]]]]],
          false]],
        [:if,
         [:binary,
          [:method_add_arg, [:fcall, [:@ident, "run?", [13, 7]]], []],
          :"&&",
          [:call,
           [:var_ref, [:@const, "ARGV", [13, 15]]],
           :".",
           [:@ident, "any?", [13, 20]]]],
         [[:command,
           [:@ident, "require", [14, 6]],
           [:args_add_block,
            [[:string_literal,
              [:string_content, [:@tstring_content, "optparse", [14, 15]]]]],
            false]],
          [:method_add_arg,
           [:call,
            [:method_add_block,
             [:call,
              [:var_ref, [:@const, "OptionParser", [15, 6]]],
              :".",
              [:@ident, "new", [15, 19]]],
             [:brace_block,
              [:block_var,
               [:params,
                [[:@ident, "op", [15, 26]]],
                nil,
                nil,
                nil,
                nil,
                nil,
                nil],
               false],
              [[:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [16, 8]]],
                  :".",
                  [:@ident, "on", [16, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-p port", [16, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the port (default is 4567)",
                       [16, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [16, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [16, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "port", [16, 89]]]],
                     [:method_add_arg,
                      [:fcall, [:@const, "Integer", [16, 95]]],
                      [:arg_paren,
                       [:args_add_block,
                        [[:var_ref, [:@ident, "val", [16, 103]]]],
                        false]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [17, 8]]],
                  :".",
                  [:@ident, "on", [17, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-o addr", [17, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the host (default is ",
                       [17, 28]],
                      [:string_embexpr,
                       [[:vcall, [:@ident, "bind", [17, 55]]]]],
                      [:@tstring_content, ")", [17, 60]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [17, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [17, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "bind", [17, 89]]]],
                     [:var_ref, [:@ident, "val", [17, 95]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [18, 8]]],
                  :".",
                  [:@ident, "on", [18, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-e env", [18, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the environment (default is development)",
                       [18, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [18, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [18, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "environment", [18, 89]]]],
                     [:call,
                      [:var_ref, [:@ident, "val", [18, 102]]],
                      :".",
                      [:@ident, "to_sym", [18, 106]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [19, 8]]],
                  :".",
                  [:@ident, "on", [19, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-s server", [19, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "specify rack server/handler (default is thin)",
                       [19, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [19, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [19, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "server", [19, 89]]]],
                     [:var_ref, [:@ident, "val", [19, 97]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [20, 8]]],
                  :".",
                  [:@ident, "on", [20, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content, [:@tstring_content, "-x", [20, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "turn on the mutex lock (default is off)",
                       [20, 28]]]]],
                   false]]],
                [:brace_block,
                 nil,
                 [[:command,
                   [:@ident, "set", [20, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "lock", [20, 89]]]],
                     [:var_ref, [:@kw, "true", [20, 95]]]],
                    false]]]]]]]],
            :".",
            [:@ident, "parse!", [21, 8]]],
           [:arg_paren,
            [:args_add_block,
             [[:call,
               [:var_ref, [:@const, "ARGV", [21, 15]]],
               :".",
               [:@ident, "dup", [21, 20]]]],
             false]]]],
         nil]],
       nil,
       nil,
       nil]],
     [:method_add_block,
      [:method_add_arg, [:fcall, [:@ident, "at_exit", [25, 2]]], []],
      [:brace_block,
       nil,
       [[:if_mod,
         [:binary,
          [:call,
           [:var_ref, [:@gvar, "$!", [25, 32]]],
           :".",
           [:@ident, "nil?", [25, 35]]],
          :"&&",
          [:call,
           [:var_ref, [:@const, "Application", [25, 43]]],
           :".",
           [:@ident, "run?", [25, 55]]]],
         [:call,
          [:var_ref, [:@const, "Application", [25, 12]]],
          :".",
          [:@ident, "run!", [25, 24]]]]]]]],
    nil,
    nil,
    nil]],
  [:command,
   [:@ident, "extend", [31, 0]],
   [:args_add_block,
    [[:const_path_ref,
      [:var_ref, [:@const, "Sinatra", [31, 7]]],
      [:@const, "Delegator", [31, 16]]]],
    false]],
  [:class,
   [:const_path_ref,
    [:var_ref, [:@const, "Rack", [33, 6]]],
    [:@const, "Builder", [33, 12]]],
   nil,
   [:bodystmt,
    [[:command,
      [:@ident, "include", [34, 2]],
      [:args_add_block,
       [[:const_path_ref,
         [:var_ref, [:@const, "Sinatra", [34, 10]]],
         [:@const, "Delegator", [34, 19]]]],
       false]]],
    nil,
    nil,
    nil]]]]
[:program,
 [[:command,
   [:@ident, "require", [1, 0]],
   [:args_add_block,
    [[:string_literal,
      [:string_content, [:@tstring_content, "sinatra/base", [1, 9]]]]],
    false]],
  [:module,
   [:const_ref, [:@const, "Sinatra", [3, 7]]],
   [:bodystmt,
    [[:void_stmt],
     [:class,
      [:const_ref, [:@const, "Application", [4, 8]]],
      [:var_ref, [:@const, "Base", [4, 22]]],
      [:bodystmt,
       [[:command,
         [:@ident, "set", [9, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "app_file", [9, 9]]]],
           [:binary,
            [:call,
             [:vcall, [:@ident, "caller_files", [9, 19]]],
             :".",
             [:@ident, "first", [9, 32]]],
            :"||",
            [:var_ref, [:@gvar, "$0", [9, 41]]]]],
          false]],
        [:command,
         [:@ident, "set", [11, 4]],
         [:args_add_block,
          [[:symbol_literal, [:symbol, [:@ident, "run", [11, 9]]]],
           [:method_add_block,
            [:call,
             [:var_ref, [:@const, "Proc", [11, 14]]],
             :".",
             [:@ident, "new", [11, 19]]],
            [:brace_block,
             nil,
             [[:binary,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 25]]],
                 :".",
                 [:@ident, "expand_path", [11, 30]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:var_ref, [:@gvar, "$0", [11, 42]]]],
                  false]]],
               :==,
               [:method_add_arg,
                [:call,
                 [:var_ref, [:@const, "File", [11, 49]]],
                 :".",
                 [:@ident, "expand_path", [11, 54]]],
                [:arg_paren,
                 [:args_add_block,
                  [[:vcall, [:@ident, "app_file", [11, 66]]]],
                  false]]]]]]]],
          false]],
        [:if,
         [:binary,
          [:method_add_arg, [:fcall, [:@ident, "run?", [13, 7]]], []],
          :"&&",
          [:call,
           [:var_ref, [:@const, "ARGV", [13, 15]]],
           :".",
           [:@ident, "any?", [13, 20]]]],
         [[:command,
           [:@ident, "require", [14, 6]],
           [:args_add_block,
            [[:string_literal,
              [:string_content, [:@tstring_content, "optparse", [14, 15]]]]],
            false]],
          [:method_add_arg,
           [:call,
            [:method_add_block,
             [:call,
              [:var_ref, [:@const, "OptionParser", [15, 6]]],
              :".",
              [:@ident, "new", [15, 19]]],
             [:brace_block,
              [:block_var,
               [:params,
                [[:@ident, "op", [15, 26]]],
                nil,
                nil,
                nil,
                nil,
                nil,
                nil],
               false],
              [[:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [16, 8]]],
                  :".",
                  [:@ident, "on", [16, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-p port", [16, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the port (default is 4567)",
                       [16, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [16, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [16, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "port", [16, 89]]]],
                     [:method_add_arg,
                      [:fcall, [:@const, "Integer", [16, 95]]],
                      [:arg_paren,
                       [:args_add_block,
                        [[:var_ref, [:@ident, "val", [16, 103]]]],
                        false]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [17, 8]]],
                  :".",
                  [:@ident, "on", [17, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-o addr", [17, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the host (default is ",
                       [17, 28]],
                      [:string_embexpr,
                       [[:vcall, [:@ident, "bind", [17, 55]]]]],
                      [:@tstring_content, ")", [17, 60]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [17, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [17, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "bind", [17, 89]]]],
                     [:var_ref, [:@ident, "val", [17, 95]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [18, 8]]],
                  :".",
                  [:@ident, "on", [18, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-e env", [18, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "set the environment (default is development)",
                       [18, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [18, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [18, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "environment", [18, 89]]]],
                     [:call,
                      [:var_ref, [:@ident, "val", [18, 102]]],
                      :".",
                      [:@ident, "to_sym", [18, 106]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [19, 8]]],
                  :".",
                  [:@ident, "on", [19, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content,
                      [:@tstring_content, "-s server", [19, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "specify rack server/handler (default is thin)",
                       [19, 28]]]]],
                   false]]],
                [:brace_block,
                 [:block_var,
                  [:params,
                   [[:@ident, "val", [19, 79]]],
                   nil,
                   nil,
                   nil,
                   nil,
                   nil,
                   nil],
                  false],
                 [[:command,
                   [:@ident, "set", [19, 84]],
                   [:args_add_block,
                    [[:symbol_literal,
                      [:symbol, [:@ident, "server", [19, 89]]]],
                     [:var_ref, [:@ident, "val", [19, 97]]]],
                    false]]]]],
               [:method_add_block,
                [:method_add_arg,
                 [:call,
                  [:var_ref, [:@ident, "op", [20, 8]]],
                  :".",
                  [:@ident, "on", [20, 11]]],
                 [:arg_paren,
                  [:args_add_block,
                   [[:string_literal,
                     [:string_content, [:@tstring_content, "-x", [20, 15]]]],
                    [:string_literal,
                     [:string_content,
                      [:@tstring_content,
                       "turn on the mutex lock (default is off)",
                       [20, 28]]]]],
                   false]]],
                [:brace_block,
                 nil,
                 [[:command,
                   [:@ident, "set", [20, 84]],
                   [:args_add_block,
                    [[:symbol_literal, [:symbol, [:@ident, "lock", [20, 89]]]],
                     [:var_ref, [:@kw, "true", [20, 95]]]],
                    false]]]]]]]],
            :".",
            [:@ident, "parse!", [21, 8]]],
           [:arg_paren,
            [:args_add_block,
             [[:call,
               [:var_ref, [:@const, "ARGV", [21, 15]]],
               :".",
               [:@ident, "dup", [21, 20]]]],
             false]]]],
         nil]],
       nil,
       nil,
       nil]],
     [:method_add_block,
      [:method_add_arg, [:fcall, [:@ident, "at_exit", [25, 2]]], []],
      [:brace_block,
       nil,
       [[:if_mod,
         [:binary,
          [:call,
           [:var_ref, [:@gvar, "$!", [25, 32]]],
           :".",
           [:@ident, "nil?", [25, 35]]],
          :"&&",
          [:call,
           [:var_ref, [:@const, "Application", [25, 43]]],
           :".",
           [:@ident, "run?", [25, 55]]]],
         [:call,
          [:var_ref, [:@const, "Application", [25, 12]]],
          :".",
          [:@ident, "run!", [25, 24]]]]]]]],
    nil,
    nil,
    nil]],
  [:command,
   [:@ident, "extend", [31, 0]],
   [:args_add_block,
    [[:const_path_ref,
      [:var_ref, [:@const, "Sinatra", [31, 7]]],
      [:@const, "Delegator", [31, 16]]]],
    false]],
  [:class,
   [:const_path_ref,
    [:var_ref, [:@const, "Rack", [33, 6]]],
    [:@const, "Builder", [33, 12]]],
   nil,
   [:bodystmt,
    [[:command,
      [:@ident, "include", [34, 2]],
      [:args_add_block,
       [[:const_path_ref,
         [:var_ref, [:@const, "Sinatra", [34, 10]]],
         [:@const, "Delegator", [34, 19]]]],
       false]]],
    nil,
    nil,
    nil]]]]
